from sklearn.linear_model import LinearRegression
import sys, os

# Need this line to add lib to path for all child processes
os.environ['PYTHONPATH'] = os.path.abspath(".")
import lib.models as models

configfile: "config.yaml"
include: "snakemake/sam.rules"
include: "snakemake/jupyter.rules"


rule all:
    input: '01-ridge-regression-performance.done 02-ugly-linear-response-functions.done 03-new-normalization-techniques.done'.split(' ')

rule inputs:
    input: "3d/QT.nc", "3d/SL.nc", "2d/LHF.nc", "2d/SHF.nc"
    output: "X.nc"
    script: "merge.py"

rule outputs:
    input: '3d/Q1.nc', '3d/Q2.nc'
    output: "Y.nc"
    script: "merge.py"

rule test_train_split:
    input: "{f}.nc"
    output: train="train/{f}.nc", test="test/{f}.nc"
    params: t_split=50.0
    script: "../scripts/test_train_split.py"


rule cross_validate:
    input: input_train="train/X.nc", output_train="train/Y.nc",
           input_test="test/X.nc", output_test="test/Y.nc",
           weight="w.nc"
    output: model="cv/{model}/model.pkl",
            cv="cv/{model}/cv.json"
            # prediction="cv/{model}/pred.nc",
            # residual="cv/{model}/resid.nc"
    params: model=lambda wildcards: models.model_dict[wildcards.model], sample_dims=['time', 'y', 'x']
    script: "../scripts/cross_validate.py"


rule fit:
    input: input="X.nc", output="Y.nc",
            weight="w.nc"
    output: model="ml/linear/model.pkl"
            # prediction="cv/linear/pred.nc",
            # residual="cv/linear/resid.nc"
    params: model=LinearRegression(), sample_dims=['x', 'y', 'time']
    script: "../scripts/fit.py"
